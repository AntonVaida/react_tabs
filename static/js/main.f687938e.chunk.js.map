{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","classNames","id","href","onClick","title","find","content","App","useState","selectedTab","setSelectedTabs","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAMhC,IAAD,EAJDC,EAIC,EAJDA,KACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,cAGF,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBAEE,UAAQ,MACRF,UAAWG,IACT,GAAI,CACF,YAAaD,EAAIE,KAAON,IAL9B,SASE,mBACEO,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QAAS,kBAAMR,IAAkBI,EAAIE,IACnCL,EAAcG,IAJlB,SAOGA,EAAIK,SAfFL,EAAIE,WAsBjB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,mBACGH,EAAKW,MAAK,SAAAN,GAAG,OAAIJ,IAAkBI,EAAIE,aAD1C,aACG,EAA4CK,cCvCxCZ,EAAO,CAClB,CAAEO,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAAuCC,mBAAcd,EAAK,IAA1D,mBAAOe,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKb,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBY,EAAYL,SAGlC,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAec,EAAYR,GAC3BL,cAbgB,SAACG,GACrBW,EAAgBX,UCdpBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f687938e.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../interface/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: any,\n};\n\nexport const Tabs: React.FC<Props> = (\n  {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  },\n) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={classNames(\n                '', {\n                  'is-active': tab.id === selectedTabId,\n                },\n              )}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => selectedTabId !== tab.id && (\n                  onTabSelected(tab)\n                )}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => selectedTabId === tab.id)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './interface/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTabs] = useState<Tab>(tabs[0]);\n\n  const onTabSelected = (tab:Tab) => {\n    setSelectedTabs(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}